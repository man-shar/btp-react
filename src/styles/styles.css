@import url('https://fonts.googleapis.com/css?family=PT+Sans');

.panel-collapse-svg {
  transition: transform 0.2s;
  width: 0.85em;
  height: 0.85em;
  padding: 1px;
  float: left;
  margin: auto 2px;
}

#main-container {
  margin: 0 auto;
  display: flex;
  height: 100%;
}

#chart-container, #things {
  vertical-align:top;
}

#chart-container {
  display: inline-block;
  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);
}

#artboard {
  background-color: white;
  min-width: 300px;
  position: relative;
  width: 100%;
  overflow-x: auto;
}

#things {
  min-width: 400px;
  max-width: 400px;
  flex-grow: 1;
  border-left: 0.1em solid #ddd;
  background-color: #fff;
  right: 0;
  top: 0;
  height: 100%;
  display: flex;
  flex-direction: column;  
}

.panel {
  overflow-y: auto;
  display: block;
  /* flex-grow: 1; */
  /* position: relative;
  top: 0;
  left: 0;
  min-width: 0; */

  max-height: 70%;
  
  transition: flex-grow 0.4s ease, font-size 0.2s ease, background-color 0.25s ease, color 0.25s ease;
  will-change: flex-grow, font-size, background-color, color;
  cursor: pointer;
  
  &.active {
    flex-grow: 100;
    transition: flex-grow 1s ease-in-out, font-size 0.35s ease, background-color 0.3s ease, color 0.3s ease;
  }
  
  &:not(.active):hover {
    flex-grow: 10;
  }
}

.hidden {
  display: none;
}

.things-label {
  cursor: pointer;
  background-color: #556270;
  color: #fff;
  /* text-align: center; */
  font-size: 14px;
  height: 25px;
  position: sticky;
  left: 0;
  top: 0;
  z-index: 10;
  display: flex;
  align-items: center;
}

#data-container {
  min-height: max-content;
}

#data-drop-container > #data-drop-placeholder-text {
  cursor: pointer;
  opacity: 0.7;
  text-align: center;
}

#data-drop-container > #data-drop-placeholder-text:hover {
  opacity: 1;
}

#data-drop-container {
  max-height: 200px;
  height: 20%;
  overflow-y: auto;
}

#data-drop-placeholder-text {
  font-size: 14px;
  font-style: italic;
}

/* .attribute-container {
  max-height: 30%;
  overflow-y: scroll;
} */

.column-name {
  cursor: pointer;
  color: white;
  background-color: #e1e0e0;
  font-style: italic;
  font-weight: bold;
}

#data-table {
  display: flex;
  justify-content: space-between;
  /* padding: 1em; */
}

.column-flex-table {
  margin: 0.5em;
  border-right: 1px solid #ddd;
}

.column-flex-table > .AttributeName {
  margin: 0.5em 1em 0em 0em;
  background-color: #b6d6ff;
}

.column-flex-table > .AttributeName:hover{
  background-color: #556270;
  color: #fff;
}

.AttributeRow {
  display: flex;
  padding: 0em 0.5em;
  align-items: start;
}

.AttributeContainer {
  text-align: left;
  /* padding: 0.2em 0.5em;
  margin: 1em auto;
  padding: 1em; */
  max-height: 175px;
  overflow-y: scroll;
  border-right: 1px solid #ddd;
  /* width: 80%; */
}

.AttributeName, .codemirror-marker, .DataFlexColumnHeader {
  width: 10em;
  display: flex;
  background-color: #e1e0e0;
  border-radius: 5px;
  padding: 0.2em 0.5em;
  margin-right: 1em;
  cursor: -webkit-grab;
  cursor:-moz-grab;
}

.DataFlexColumnHeader {
  margin-bottom: 1em;
}

.codemirror-marker {
  width: auto;
  display: inline;
  margin: 0em 0.2em;
  /* vertical-align: middle; */
}

.AttributeName:active { 
  cursor: -webkit-grabbing;
  cursor:-moz-grabbing;
}

.AttributeExpression {
  flex-grow: 1;
}

.AttributeExpressionEditable {
  padding: 0.2em 0.5em;
}

.AttributeValue {
  padding: 0.2em 0.5em;
  color: #aaa;
}

.CodeMirror {
  height: intrinsic;           /* Safari/WebKit uses a non-standard name */
  height: -moz-max-content;    /* Firefox/Gecko */
  height: -webkit-max-content; /* Chrome */
}

.AttributesSectionHeading {
  /* text-align: center; */
  font-size: 1.2em;
  color: #556270;
  /* background-color: #556270; */
  margin: 0.5em 0.5em;
  /* border-bottom: 1px solid #ddd; */
/*   box-shadow: 0 6px 4px -4px rgba(0, 0, 0, 0.1); */
}

.EditableTextAttributeName {
  display: inline-block;
  cursor: text;
}

[contenteditable]:focus {
  outline: 0px solid transparent;
}

.inherited-attribute {
  opacity: 0.7;
}

.isHovered,.DataFlexColumnHeader:hover {
  background-color: #556270;
  color: #fff;
}

header
{
  font-family: 'Lobster', cursive;
  text-align: center;
  font-size: 25px;  
}

#info
{
  font-size: 18px;
  color: #555;
  text-align: center;
  margin-bottom: 25px;
}

a{
  color: #074E8C;
}

.scrollbar
{
  margin-left: 30px;
  float: left;
  height: 300px;
  width: 65px;
  background: #e1e0e0;
  overflow-y: scroll;
  margin-bottom: 25px;
}

.force-overflow
{
  min-height: 450px;
}

#wrapper
{
  text-align: center;
  width: 500px;
  margin: auto;
}

/* scrollbar style */
*::-webkit-scrollbar-track
{
  /* -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3); */
  /* border-radius: 3px; */
  background-color: #fff;
}

*::-webkit-scrollbar
{
  width: 7px;
  height: 7px;
  background-color: #fff;
}

*::-webkit-scrollbar-thumb
{
  /* border-radius: 3px; */
  /* -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.6); */
  background-color: #898989;
}

#ToolbarFlexContainer {
  display: flex; /* I now declare this as a flex-container */
  display: -webkit-flex; /* This is the Chrome notation */
  position: absolute;
  top: 1%;
  left: 2%;
}

.ToolbarItemFlex {
 /* Just some color and shape */
  margin-right: 1em;
  border-radius: 3px;
}

.activeToolbarItem {
  font-weight: bold;
}

.toolbar-key {
  display: inline-block;
  margin-right: 0.6em;
}

/* tab styles, stolen shamelessly from: https://codepen.io/oknoblich/pen/tfjFl?editors=1100; */

label {
  display: inline-block;
  margin: 0 -1px -1px;
  padding: 1em 1em;
  font-weight: 600;
  text-align: center;
  color: #bbb;
  border: 1px solid transparent;
}

label:before {
  font-family: fontawesome;
  font-weight: normal;
  margin-right: 10px;
}

input:checked + label {
  color: #555;
  border: 1px solid #ddd;
  /* border-top: 4px solid #556270; */
  border-bottom: 1px solid #fff;
}

label:hover {
  color: #888;
  cursor: pointer;
}

#default-attributes-tab-input:checked ~ #default-attributes-tab,
#layer-attributes-tab-input:checked ~ #layer-attributes-tab,
#shape-attributes-tab-input:checked ~ #shape-attributes-tab,
#artboard-tree-tab-input:checked ~ #artboard-tree-tab 
{
  display: block;
}

section {
  display: none;
  padding: 20px 0 0;
  border-top: 1px solid #ddd;
}

.attribute-container section {
  padding: 1em 1em 0 1em;
}

input {
  display: none;
}